# Copyright (c) 2021 HiHope Open Source Organization .
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/clang/clang.gni")
import("//build/ohos.gni")
import("//build/ohos/kernel/kernel.gni")

linux_kernel_version = "linux-5.10"
kernel_source_dir = "//kernel/linux/$linux_kernel_version"
output_dir = "$root_build_dir/packages/phone"

kernel_image = "zImage"
defconfig_file = "bcm2711_oh_32_defconfig"

group("rpi3_kernel_build") {
    deps = [
      ":check_patch",
      ":check_build",
      ":rpi3_build_kernel",
      ":rpi3_bootimg",
    ]
}

action("check_patch") {
  script = "check_patch.sh"
  outputs = [ "$root_out_dir/../KERNEL_OBJ/kernel/src_tmp/$linux_kernel_version" ]

  args = [
    rebase_path("//"),
    linux_kernel_version
  ]
}

action("check_build") {
  script = "check_build.sh"
  sources = [ kernel_source_dir ]
  outputs = [ "$root_build_dir/kernel.timestamp" ]
  args = [
    rebase_path(kernel_source_dir, root_build_dir),
    rebase_path("$root_build_dir/packages/phone/images/$kernel_image"),
    rebase_path("$root_build_dir/kernel.timestamp"),
  ]
}

action("rpi3_build_kernel") {
    script = "make_kernel.sh"
    sources = [ kernel_source_dir ]

    product_path = "vendor/$product_company/$product_name"

    outputs = [ "$root_build_dir/packages/phone/images/$kernel_image" ]

    args = [
      rebase_path("//"),
      product_path,
      target_cpu,
      linux_kernel_version,
      kernel_image,
      "$defconfig_file",
      rebase_path("$root_build_dir/packages/phone/images"),
    ]
    
    if (enable_ramdisk) {
      args += [ "enable_ramdisk" ]
    }

    print("kernel args=$args")
    deps = [
      ":check_build",
      ":check_patch",
    ]
}

action("rpi3_bootimg") {
    script = "build_kernel.py"
    outputs = [ "$output_dir/images/boot.img" ]
    args = [ "bootimg", rebase_path(output_dir) ]
    deps = [ ":rpi3_build_kernel" ]
}
